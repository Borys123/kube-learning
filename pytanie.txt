https://github.com/bmuschko/cka-crash-course/tree/master/exercises

kubectl exec (-it) <pod name> -c <container-name> -- <command>
kubectl exec -i -t my-pod --container main-app -- /bin/bash
kubectl run <pod name> --command -- <command>

command: ['sh', '-c', 'while true; do sleep 3600; done']
command:
  - sh
  - '-c'
  
kubectl api-resources

--record (see command later in describe) 

kubectl create sa my-serviceaccount -n default

kubectl top (first install metrics-server)

livenessProbe: / startupProbe: / readinessProbe:
  exec:
    command:
  initialDelaySeconds:
  periodSeconds:
  httpGet:
    path: /
	port: 80
  failureThreshold (for startupProbe)

ConfigMaps and Secrets:

ConfigMap:
data:
  key1: value1
  
Secret:
data:
  secretkey1: value1
  
Creating secret value:
echo -n "blabla" | base64

using in pod:
env:
- name: CONFIGMAPVAR
  valueFrom:
    configMapKeyRef: / secretKeyRef:
	  name: my-configmap
	  key: key1
	  
as volume:

volumeMounts:
- name: configmap-volume
  mountPath: /etc/config/configmap

volumes:
- name: configmap-volume
  configMap:
    name: my-configmap
- name: secret-volume
  secret:
    secretName: my-secret
	



1.
-- on controlplane: --
kubectl drain controlplane --ignore-daemon-sets
apt update
apt install kubeadm=1.24.0-00 kubectl=1.24.0-00
kubeadm upgrade apply v1.24.0
apt install kubelet=1.24.0-00
systemctl daemon-reload
systemctl restart kubelet
kubectl uncordon controlplane
--
kubectl drain node01 --ignore-daemon-sets
ssh node01
apt install kubeadm=1.24.0-00 kubectl=1.24.0-00
kubeadm upgrade node
apt install kubelet=1.24.0-00
systemctl daemon-reload
systemctl restart kubelet
--
ssh controlplane
kubectl uncordon node01

2.
describe command reveals the configuration of the etcd service. Look for the value of the option --listen-client-urls for the endpoint URL

ETCDCTL_API=3 etcdctl \
--cacert=/etc/kubernetes/pki/etcd/ca.crt \
--cert=/etc/kubernetes/pki/etcd/server.crt \
--key=/etc/kubernetes/pki/etcd/server.key \
snapshot save /opt/etcd-backup.db

--

ETCDCTL_API=3 etcdctl --data-dir=/var/lib/from-backup snapshot restore /opt/etcd-backup.db

vi /etc/kubernetes/manifests/etcd.yaml :
	- hostPath:
	  path: /var/lib/from-backup


3.
kubectl get nodes -o=custom-columns=<COLUMN_NAME>:<JSON_PATH>,<><>

4.
kubectl config view
kubectl config view --kubeconfig=/....
https://controlplane:6443

5.
kubectl set image deployment/myapp-deployment nginx=nginx:1.9.1

6.
apiVersion: v1
kind: Pod
metadata:
  name: mypod
spec:
  containers:
  - name: mypod
    image: redis
    volumeMounts:
    - name: foo
      mountPath: "/etc/foo"
      readOnly: true
  volumes:
  - name: foo
    secret:
      secretName: mysecret

7.
kubectl expose pod messaging --port=6379 --name messaging-service
